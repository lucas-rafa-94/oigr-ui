{"remainingRequest":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-popup/dist/es/services/animation.service.js","dependencies":[{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-popup/dist/es/services/animation.service.js","mtime":499162500000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551382622000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, isDevMode, EventEmitter } from '@angular/core';\nimport { animate, style, AnimationBuilder } from '@angular/animations';\nvar LEFT = 'left';\nvar RIGHT = 'right';\nvar DOWN = 'down';\nvar UP = 'up';\nvar DEFAULT_TYPE = 'slide';\nvar DEFAULT_DURATION = 100;\nvar animationTypes = {};\n/* tslint:disable:object-literal-sort-keys */\nanimationTypes.expand = function (direction) {\n    var scale = direction === UP || direction === DOWN ? 'scaleY' : 'scaleX';\n    var startScale = 0;\n    var endScale = 1;\n    var origin;\n    if (direction === DOWN) {\n        origin = 'top';\n    }\n    else if (direction === LEFT) {\n        origin = RIGHT;\n    }\n    else if (direction === RIGHT) {\n        origin = LEFT;\n    }\n    else {\n        origin = 'bottom';\n    }\n    return {\n        start: { transform: scale + \"(\" + startScale + \")\", transformOrigin: origin },\n        end: { transform: scale + \"(\" + endScale + \")\" }\n    };\n};\nanimationTypes.slide = function (direction) {\n    var translate = direction === LEFT || direction === RIGHT ? 'translateX' : 'translateY';\n    var start = direction === RIGHT || direction === DOWN ? -100 : 100;\n    var end = 0;\n    return {\n        start: { transform: translate + \"(\" + start + \"%)\" },\n        end: { transform: translate + \"(\" + end + \"%)\" }\n    };\n};\nanimationTypes.fade = function () {\n    return {\n        start: { opacity: 0 },\n        end: { opacity: 1 }\n    };\n};\nanimationTypes.zoom = function () {\n    var start = 0;\n    var end = 1;\n    return {\n        start: { transform: \"scale(\" + start + \")\" },\n        end: { transform: \"scale(\" + end + \")\" }\n    };\n};\n/**\n * @hidden\n */\nvar AnimationService = /*@__PURE__*/ (function () {\n    function AnimationService(animationBuilder) {\n        this.animationBuilder = animationBuilder;\n        this.start = new EventEmitter();\n        this.end = new EventEmitter();\n    }\n    AnimationService.prototype.play = function (element, options, flip) {\n        if (!this.flip || this.flip.horizontal !== flip.horizontal ||\n            this.flip.vertical !== flip.vertical) {\n            this.flip = flip;\n            var type = options.type || DEFAULT_TYPE;\n            var statesFn = animationTypes[type];\n            if (statesFn) {\n                var direction = this.getDirection(flip, options);\n                var states = statesFn(direction);\n                this.playStates(element, states, options);\n            }\n            else if (isDevMode()) {\n                throw new Error(\"Unsupported animation type: \\\"\" + type + \"\\\". The supported types are slide, expand, fade and zoom.\");\n            }\n        }\n    };\n    AnimationService.prototype.ngOnDestroy = function () {\n        this.stopPlayer();\n    };\n    AnimationService.prototype.playStates = function (element, states, options) {\n        var _this = this;\n        this.stopPlayer();\n        var duration = options.duration || DEFAULT_DURATION;\n        var factory = this.animationBuilder.build([\n            style(states.start),\n            animate(duration + \"ms ease-in\", style(states.end))\n        ]);\n        var player = this.player = factory.create(element);\n        player.onDone(function () {\n            _this.end.emit();\n            _this.stopPlayer();\n        });\n        this.start.emit();\n        player.play();\n    };\n    AnimationService.prototype.getDirection = function (flip, options) {\n        var direction = options.direction || DOWN;\n        if (flip.horizontal) {\n            if (direction === LEFT) {\n                direction = RIGHT;\n            }\n            else if (direction === RIGHT) {\n                direction = LEFT;\n            }\n        }\n        if (flip.vertical) {\n            if (direction === DOWN) {\n                direction = UP;\n            }\n            else if (direction === UP) {\n                direction = DOWN;\n            }\n        }\n        return direction;\n    };\n    AnimationService.prototype.stopPlayer = function () {\n        if (this.player) {\n            this.player.destroy();\n            this.player = null;\n        }\n    };\n    return AnimationService;\n}());\nexport { AnimationService };\n",null]}