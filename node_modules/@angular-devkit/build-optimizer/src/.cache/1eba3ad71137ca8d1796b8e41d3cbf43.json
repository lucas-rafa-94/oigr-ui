{"remainingRequest":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/common/remove-tag-event.js","dependencies":[{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/common/remove-tag-event.js","mtime":499162500000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551382622000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport { PreventableEvent } from './preventable-event';\n/**\n * Fires when a tag is about to the removed. If you cancel the event, the removal is prevented.\n */\nvar RemoveTagEvent = /** @class */ (function (_super) {\n    tslib_1.__extends(RemoveTagEvent, _super);\n    /**\n     * Constructs the event arguments for the `remove` event.\n     * @param dataItem - The data item or an array of data items that will be removed.\n     */\n    function RemoveTagEvent(dataItem) {\n        var _this = _super.call(this) || this;\n        _this.dataItem = dataItem;\n        return _this;\n    }\n    return RemoveTagEvent;\n}(PreventableEvent));\nexport { RemoveTagEvent };\n",null]}