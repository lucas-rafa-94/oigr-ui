{"remainingRequest":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/templates/header-template.directive.js","dependencies":[{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/templates/header-template.directive.js","mtime":499162500000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551382622000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:max-line-length */\nimport { Directive, TemplateRef } from '@angular/core';\n/**\n * Used for rendering the header content of the list. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>HeaderTemplate` directive inside the component tag.\n *\n * You can use:\n * - The `kendoAutoCompleteHeaderTemplate` directive for the AutoComplete ([see example]({% slug templates_autocomplete %})).\n * - The `kendoComboBoxHeaderTemplate` directive for the ComboBox ([see example]({% slug templates_combobox %})).\n * - The `kendoDropDownListHeaderTemplate` directive for the DropDownList ([see example]({% slug templates_ddl %})).\n * - The `kendoMultiSelectHeaderTemplate` directive for the MultiSelect ([see example]({% slug templates_multiselect %})).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxHeaderTemplate>\n *      <h4>Header template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nvar HeaderTemplateDirective = /*@__PURE__*/ (function () {\n    function HeaderTemplateDirective(templateRef) {\n        this.templateRef = templateRef;\n    }\n    return HeaderTemplateDirective;\n}());\nexport { HeaderTemplateDirective };\n",null]}