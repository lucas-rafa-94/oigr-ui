{"remainingRequest":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-popup-common/dist/es/align.js","dependencies":[{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-popup-common/dist/es/align.js","mtime":1527584869000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551382622000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import point from './align-point';\n\nvar align = function (options) {\n    var anchorRect = options.anchorRect;\n    var anchorAlign = options.anchorAlign;\n    var elementRect = options.elementRect;\n    var elementAlign = options.elementAlign;\n    var margin = options.margin; if ( margin === void 0 ) margin = {};\n    var anchorHorizontal = anchorAlign.horizontal;\n    var anchorVertical = anchorAlign.vertical;\n    var elementHorizontal = elementAlign.horizontal;\n    var elementVertical = elementAlign.vertical;\n\n    var horizontalMargin = margin.horizontal || 0;\n    var verticalMargin = margin.vertical || 0;\n\n    var top = anchorRect.top;\n    var left = anchorRect.left;\n\n    if (anchorVertical === point.bottom) {\n        top += anchorRect.height;\n    }\n\n    if (anchorVertical === point.center || anchorVertical === point.middle) {\n        top += Math.round(anchorRect.height / 2);\n    }\n\n    if (elementVertical === point.bottom) {\n        top -= elementRect.height;\n        verticalMargin *= -1;\n    }\n\n    if (elementVertical === point.center || elementVertical === point.middle) {\n        top -= Math.round(elementRect.height / 2);\n        verticalMargin *= -1;\n    }\n\n    if (anchorHorizontal === point.right) {\n        left += anchorRect.width;\n    }\n\n    if (anchorHorizontal === point.center || anchorHorizontal === point.middle) {\n        left += Math.round(anchorRect.width / 2);\n    }\n\n    if (elementHorizontal === point.right) {\n        left -= elementRect.width;\n        horizontalMargin *= -1;\n    }\n\n    if (elementHorizontal === point.center || elementHorizontal === point.middle) {\n        left -= Math.round(elementRect.width / 2);\n        horizontalMargin *= -1;\n    }\n\n    return {\n        top: top + verticalMargin,\n        left: left + horizontalMargin\n    };\n};\n\nexport default align;\n",null]}