{"remainingRequest":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/util.js","dependencies":[{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@progress/kendo-angular-dropdowns/dist/es/util.js","mtime":499162500000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/cache-loader/dist/cjs.js","mtime":1551382622000},{"path":"/Users/lucasdossantos/Desktop/oigr-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* tslint:disable:no-null-keyword */\n/* tslint:disable:no-bitwise */\n/* tslint:disable:align */\n/**\n * @hidden\n */\nexport var isPresent = function (value) { return value !== null && value !== undefined; };\n/**\n * @hidden\n */\nexport var isNumber = function (value) { return !isNaN(value); };\n/**\n * @hidden\n */\nexport var isChanged = function (propertyName, changes) { return (changes[propertyName] && !changes[propertyName].isFirstChange() &&\n    changes[propertyName].previousValue !== changes[propertyName].currentValue); };\n/**\n * @hidden\n */\nexport var guid = function () {\n    var id = \"\";\n    var i;\n    var random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n/**\n * @hidden\n */\nexport var combineStr = function (begin, end) {\n    return begin.concat(end.substr(end.toLowerCase().indexOf(begin.toLowerCase()) + begin.length));\n};\n/**\n * @hidden\n */\nexport var isDocumentAvailable = function () { return typeof document !== 'undefined'; };\n/**\n * @hidden\n */\nexport var isWindowAvailable = function () { return typeof window !== 'undefined'; };\n/**\n * @hidden\n */\nexport var isArray = function (value) { return Array.isArray(value); };\n/**\n * @hidden\n */\nexport var isObject = function (value) { return typeof value === 'object'; };\n/**\n * @hidden\n */\nexport var resolveValuesInArray = function (values, data, valueField) {\n    if (data === void 0) { data = []; }\n    return values\n        .map(function (value) {\n        return data.find(function (item) { return item[valueField] === value; });\n    })\n        .filter(function (value) { return value !== undefined; });\n};\n/**\n * @hidden\n */\nexport var validateComplexValues = function (values, valueField) {\n    return isArray(values) && values.filter(function (item) {\n        return isObject(item) && item[valueField];\n    });\n};\n/**\n * @hidden\n */\nexport var resolveAllValues = function (value, data, valueField) {\n    var customValues = validateComplexValues(value, valueField) || [];\n    var resolvedValues = resolveValuesInArray(value, data, valueField) || [];\n    return resolvedValues.concat(customValues);\n};\n/**\n * @hidden\n */\nexport var isObjectArray = function (values) {\n    return isArray(values) && values.some(function (item) { return isObject(item); });\n};\n/**\n * @hidden\n */\nexport var selectedIndices = function (values, data, valueField) {\n    var extractedValues = data.map(function (item) {\n        return isPresent(item[valueField]) ? item[valueField] : item;\n    });\n    return values.reduce(function (arr, item) {\n        var value = isPresent(item[valueField]) ? item[valueField] : item;\n        var index = extractedValues.indexOf(value);\n        if (index !== -1) {\n            arr.push(index);\n        }\n        return arr;\n    }, []);\n};\n/**\n * @hidden\n */\nexport var getter = function (dataItem, field, usePrimitive) {\n    if (usePrimitive === void 0) { usePrimitive = false; }\n    if (isPresent(dataItem)) {\n        if (usePrimitive) {\n            return field && isPresent(dataItem[field]) ? dataItem[field] : dataItem;\n        }\n        else {\n            return field ? dataItem[field] : dataItem;\n        }\n    }\n};\n/**\n * @hidden\n */\nexport var resolveValue = function (args) {\n    var dataItem;\n    if (isPresent(args.value)) {\n        var data = [args.defaultItem].concat(args.data);\n        dataItem = data.find(function (element) { return getter(element, args.valueField) === args.value; });\n        return {\n            dataItem: dataItem,\n            focused: args.data.indexOf(dataItem),\n            selected: args.data.indexOf(dataItem)\n        };\n    }\n    else if (args.index) {\n        dataItem = args.data[args.index];\n        return {\n            dataItem: args.data[args.index],\n            focused: args.index,\n            selected: args.index\n        };\n    }\n    return {\n        dataItem: args.defaultItem,\n        focused: -1,\n        selected: -1\n    };\n};\n/**\n * @hidden\n */\nexport var sameCharsOnly = function (word, character) {\n    for (var idx = 0; idx < word.length; idx++) {\n        if (word.charAt(idx) !== character) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @hidden\n */\nexport var shuffleData = function (data, splitIndex, defaultItem) {\n    var result = data;\n    if (defaultItem) {\n        result = [defaultItem].concat(result);\n    }\n    return result.slice(splitIndex).concat(result.slice(0, splitIndex));\n};\n/**\n * @hidden\n */\nexport var matchText = function (text, word, ignoreCase) {\n    if (!isPresent(text)) {\n        return false;\n    }\n    var temp = String(text);\n    if (ignoreCase) {\n        temp = temp.toLowerCase();\n    }\n    return temp.indexOf(word) === 0;\n};\n",null]}