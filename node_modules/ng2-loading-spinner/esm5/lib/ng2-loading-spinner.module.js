/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { Ng2LoadingSpinnerComponent } from './ng2-loading-spinner.component';
import { Ng2LoadingSpinnerDirective } from './ng2-loading-spinner.directive';
var Ng2LoadingSpinnerModule = /** @class */ (function () {
    function Ng2LoadingSpinnerModule() {
    }
    /**
     * @param {?} globalConfig
     * @return {?}
     */
    Ng2LoadingSpinnerModule.forRoot = /**
     * @param {?} globalConfig
     * @return {?}
     */
    function (globalConfig) {
        return {
            ngModule: Ng2LoadingSpinnerModule,
            providers: [{ provide: 'loadingConfig', useValue: globalConfig }]
        };
    };
    Ng2LoadingSpinnerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [Ng2LoadingSpinnerComponent, Ng2LoadingSpinnerDirective],
                    exports: [Ng2LoadingSpinnerDirective],
                    entryComponents: [Ng2LoadingSpinnerComponent]
                },] },
    ];
    return Ng2LoadingSpinnerModule;
}());
export { Ng2LoadingSpinnerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLWxvYWRpbmctc3Bpbm5lci5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZzItbG9hZGluZy1zcGlubmVyLyIsInNvdXJjZXMiOlsibGliL25nMi1sb2FkaW5nLXNwaW5uZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFN0MsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDM0UsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFHM0U7SUFBQTtJQWVBLENBQUM7Ozs7O0lBTlUsK0JBQU87Ozs7SUFBZCxVQUFlLFlBQXNDO1FBQ2pELE9BQU87WUFDSCxRQUFRLEVBQUUsdUJBQXVCO1lBQ2pDLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsWUFBWSxFQUFDLENBQUM7U0FDbEUsQ0FBQztJQUNOLENBQUM7O2dCQWRKLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTtxQkFDZjtvQkFDRCxZQUFZLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSwwQkFBMEIsQ0FBQztvQkFDdEUsT0FBTyxFQUFFLENBQUMsMEJBQTBCLENBQUM7b0JBQ3JDLGVBQWUsRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNoRDs7SUFRRCw4QkFBQztDQUFBLEFBZkQsSUFlQztTQVBZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7TmcyTG9hZGluZ1NwaW5uZXJDb21wb25lbnR9IGZyb20gJy4vbmcyLWxvYWRpbmctc3Bpbm5lci5jb21wb25lbnQnO1xuaW1wb3J0IHtOZzJMb2FkaW5nU3Bpbm5lckRpcmVjdGl2ZX0gZnJvbSAnLi9uZzItbG9hZGluZy1zcGlubmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQge0lOZzJMb2FkaW5nU3Bpbm5lckNvbmZpZ30gZnJvbSAnLi9jb25maWcnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtOZzJMb2FkaW5nU3Bpbm5lckNvbXBvbmVudCwgTmcyTG9hZGluZ1NwaW5uZXJEaXJlY3RpdmVdLFxuICAgIGV4cG9ydHM6IFtOZzJMb2FkaW5nU3Bpbm5lckRpcmVjdGl2ZV0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbTmcyTG9hZGluZ1NwaW5uZXJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIE5nMkxvYWRpbmdTcGlubmVyTW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChnbG9iYWxDb25maWc6IElOZzJMb2FkaW5nU3Bpbm5lckNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IE5nMkxvYWRpbmdTcGlubmVyTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6ICdsb2FkaW5nQ29uZmlnJywgdXNlVmFsdWU6IGdsb2JhbENvbmZpZ31dXG4gICAgICAgIH07XG4gICAgfVxufVxuIl19